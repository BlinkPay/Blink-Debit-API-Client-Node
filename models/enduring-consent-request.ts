/* tslint:disable */
/* eslint-disable */
/**
 * Blink Debit (PayNow and AutoPay) Payments API
 * APIs to execute Direct Credit payments for customers who use online banking with supported banks.  These APIs power **Blink PayNow** enabling one-off payments, and **Blink AutoPay** enabling recurring payments.  **Request IDs** Request IDs are included in the header in every response, to assist in tracing and debugging.  **API Change Policy** Additive changes may be made to request query parameters and JSON responses. To preserve backward compatibility, endpoint naming updates or JSON elements that already exist will not be removed or renamed until a major version (URL) change. This policy applies only after the official v1 release.
 *
 * OpenAPI spec version: 1.0.19
 * Contact: sysadmin@blinkpay.co.nz
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Amount } from './amount';
import { AuthFlow } from './auth-flow';
import { ConsentDetail } from './consent-detail';
import { Period } from './period';
/**
 * The model for an enduring consent request, relating to multiple payments.
 * @export
 * @interface EnduringConsentRequest
 */
export interface EnduringConsentRequest extends ConsentDetail {
    /**
     * 
     * @type {AuthFlow}
     * @memberof EnduringConsentRequest
     */
    flow: AuthFlow;
    /**
     * The ISO 8601 start date to calculate the periods for which to calculate the consent period.
     * @type {Date}
     * @memberof EnduringConsentRequest
     */
    fromTimestamp: Date;
    /**
     * The ISO 8601 timeout for when an enduring consent will expire. If this field is blank, an indefinite request will be attempted.
     * @type {Date}
     * @memberof EnduringConsentRequest
     */
    expiryTimestamp?: Date;
    /**
     * 
     * @type {Period}
     * @memberof EnduringConsentRequest
     */
    period: Period;
    /**
     * 
     * @type {Amount}
     * @memberof EnduringConsentRequest
     */
    maximumAmountPeriod: Amount;
}


