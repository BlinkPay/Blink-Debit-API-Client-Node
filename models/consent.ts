/* tslint:disable */
/* eslint-disable */
/**
 * Blink Debit (PayNow and AutoPay) Payments API
 * APIs to execute Direct Credit payments for customers who use online banking with supported banks.  These APIs power **Blink PayNow** enabling one-off payments, and **Blink AutoPay** enabling recurring payments.  **Request IDs** Request IDs are included in the header in every response, to assist in tracing and debugging.  **API Change Policy** Additive changes may be made to request query parameters and JSON responses. To preserve backward compatibility, endpoint naming updates or JSON elements that already exist will not be removed or renamed until a major version (URL) change. This policy applies only after the official v1 release.
 *
 * OpenAPI spec version: 1.0.19
 * Contact: sysadmin@blinkpay.co.nz
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Account } from './account';
import { EnduringConsentRequest } from './enduring-consent-request';
import { Payment } from './payment';
import { SingleConsentRequest } from './single-consent-request';
/**
 * The model for a consent.
 * @export
 * @interface Consent
 */
export interface Consent {
    /**
     * The consent ID
     * @type {string}
     * @memberof Consent
     */
    consentId: string;
    /**
     * The status of the consent
     * @type {string}
     * @memberof Consent
     */
    status: ConsentStatusEnum;
    /**
     * The timestamp that the consent was created
     * @type {Date}
     * @memberof Consent
     */
    creationTimestamp: Date;
    /**
     * The time that the status was last updated
     * @type {Date}
     * @memberof Consent
     */
    statusUpdatedTimestamp: Date;
    /**
     * The consent details
     * @type {EnduringConsentRequest | SingleConsentRequest}
     * @memberof Consent
     */
    detail: EnduringConsentRequest | SingleConsentRequest;
    /**
     * If applicable, the Westpac account list for account selection. If this is included, the merchant is required to ask the customer which account they would like to debit the payment from using the information provided.
     * @type {Array<Account>}
     * @memberof Consent
     */
    accounts?: Array<Account>;
    /**
     * Payments associated with this consent, if any.
     * @type {Array<Payment>}
     * @memberof Consent
     */
    payments: Array<Payment>;
}

/**
    * @export
    * @enum {string}
    */
export enum ConsentStatusEnum {
    GatewayAwaitingSubmission = 'GatewayAwaitingSubmission',
    GatewayTimeout = 'GatewayTimeout',
    AwaitingAuthorisation = 'AwaitingAuthorisation',
    Authorised = 'Authorised',
    Consumed = 'Consumed',
    Rejected = 'Rejected',
    Revoked = 'Revoked'
}

