/* tslint:disable */
/* eslint-disable */
/**
 * Blink Debit (PayNow and AutoPay) Payments API
 * APIs to execute Direct Credit payments for customers who use online banking with supported banks.  These APIs power **Blink PayNow** enabling one-off payments, and **Blink AutoPay** enabling recurring payments.  **Request IDs** Request IDs are included in the header in every response, to assist in tracing and debugging.  **API Change Policy** Additive changes may be made to request query parameters and JSON responses. To preserve backward compatibility, endpoint naming updates or JSON elements that already exist will not be removed or renamed until a major version (URL) change. This policy applies only after the official v1 release.
 *
 * OpenAPI spec version: 1.0.19
 * Contact: sysadmin@blinkpay.co.nz
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { PaymentRequest } from './payment-request';
import { Refund } from './refund';
/**
 * The model for a payment.
 * @export
 * @interface Payment
 */
export interface Payment {
    /**
     * The payment ID
     * @type {string}
     * @memberof Payment
     */
    paymentId: string;
    /**
     * The type of payment (single or enduring).
     * @type {string}
     * @memberof Payment
     */
    type: PaymentTypeEnum;
    /**
     * The status of the payment.
     * @type {string}
     * @memberof Payment
     */
    status: PaymentStatusEnum;
    /**
     * The reason for `AcceptedSettlementCompleted`.
     * @type {string}
     * @memberof Payment
     */
    acceptedReason?: PaymentAcceptedReasonEnum;
    /**
     * The timestamp that the payment was created.
     * @type {Date}
     * @memberof Payment
     */
    creationTimestamp: Date;
    /**
     * The timestamp that the payment status was last updated.
     * @type {Date}
     * @memberof Payment
     */
    statusUpdatedTimestamp: Date;
    /**
     * 
     * @type {PaymentRequest}
     * @memberof Payment
     */
    detail: PaymentRequest;
    /**
     * Refunds that are related to this payment, if any.
     * @type {Array<Refund>}
     * @memberof Payment
     */
    refunds: Array<Refund>;
}

/**
    * @export
    * @enum {string}
    */
export enum PaymentTypeEnum {
    Single = 'single',
    Enduring = 'enduring'
}
/**
    * @export
    * @enum {string}
    */
export enum PaymentStatusEnum {
    Pending = 'Pending',
    AcceptedSettlementInProcess = 'AcceptedSettlementInProcess',
    AcceptedSettlementCompleted = 'AcceptedSettlementCompleted',
    Rejected = 'Rejected'
}
/**
    * @export
    * @enum {string}
    */
export enum PaymentAcceptedReasonEnum {
    SourceBankPaymentSent = 'source_bank_payment_sent',
    CardNetworkAccepted = 'card_network_accepted'
}

